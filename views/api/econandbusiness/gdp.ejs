<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Display GDP Data</title>
    <style>
        #json-container {
            display: none; /* Hide the JSON container */
        }

        #csv-container {
            display: none; /* Hide the CSV container */
        }

        #chart-and-table {
            display: flex;
            flex-direction: column;
            align-items: center;
            margin-top: 20px;
        }

        #line-chart {
            margin-bottom: 20px;
        }

        table {
            border-collapse: collapse;
            width: 100%;
            margin-top: 20px;
            font-family: Arial, sans-serif;
            border: 1px solid #ddd;
        }

        th, td {
            border: 1px solid #ddd;
            text-align: left;
            padding: 12px;
        }

        th {
            background-color: #f2f2f2;
        }
    </style>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</head>

<body>
    
    <div id="error-message" style="text-align: center; color: red; font-size: 24px; font-weight: bold; font-family: monospace, Arial;"></div>

    <pre id="json-container">
        <!-- JSON data will be displayed here -->
    </pre>

    <div id="chart-and-table">
        <canvas id="line-chart"></canvas>

        <table>
            <thead>
                <tr>
                    <th>Category</th>
                    <th>Absolute Change (£ millions)</th>
                    <th>Percentage Change</th>
                </tr>
            </thead>
            <tbody id="gdp-table-body">
                <!-- Changes will be displayed here -->
            </tbody>
        </table>
    </div>

    <script>
    var apiUrl = 'https://stats.je/proxy?targetUrl=https://opendata.gov.je/api/3/action/datastore_search?resource_id=ae620bf3-41be-4461-adb8-2220ab7cb000';

    var xhr = new XMLHttpRequest();
    xhr.open('GET', apiUrl, true);

    xhr.onload = function() {
        if (xhr.status >= 200 && xhr.status < 300) {
            var response = JSON.parse(xhr.responseText);

            // Convert the JSON data to CSV format
            var csv = jsonToCsv(response);

            // Parse the CSV data
            var csvData = parseCSV(csv);

            // Extract the data for the chart
            var years = csvData.map(function(row) {
                return row.Year;
            });
            var gdpValues = csvData.map(function(row) {
                return parseFloat(row.GDP);
            });

            // Create a line chart using Chart.js
            var ctx = document.getElementById('line-chart').getContext('2d');
            var lineChart = new Chart(ctx, {
                type: 'line',
                plugins: [{
                    afterDraw: chart => {
                        if (chart.tooltip?._active?.length) {
                            let x = chart.tooltip._active[0].element.x;
                            let yAxis = chart.scales.y;
                            let ctx = chart.ctx;
                            ctx.save();
                            ctx.beginPath();
                            ctx.moveTo(x, yAxis.top);
                            ctx.lineTo(x, yAxis.bottom);
                            ctx.lineWidth = 2;
                            ctx.strokeStyle = 'rgba(255, 0, 0, 0.4)';
                            ctx.stroke();
                            ctx.restore();
                        }
                    }
                }],
                data: {
                    labels: years,
                    datasets: [{
                        label: 'GDP',
                        data: gdpValues,
                        borderColor: 'black',
                        fill: false,
                    }],
                },
                options: {
                    title: {
                        display: true,
                        text: 'GDP Over the Years', // Chart title
                        fontSize: 25,
                    },
                    scales: {
                        x: {
                            type: 'category',
                            labels: years,
                            grid: {
                                display: false,
                            },
                            title: {
                                display: true,
                                text: 'Year', // X-axis title
                            },
                        },
                        y: {
                            title: {
                                display: true,
                                text: 'GDP (GBP £ million)', // Y-axis title
                            },
                        },
                    },
                    plugins: {
                        tooltip: {
                            mode: 'index',
                            intersect: false,
                        },
                    },
                },
            });

            lineChart.options.plugins.legend.display = false; // Hide the legend

            // Display the changes in the table
            var gdpTableBody = document.getElementById('gdp-table-body');

            // Calculate 1-year change, 5-year change, and change since records began
            var oneYearChange = calculatePercentageChange(gdpValues[gdpValues.length - 2], gdpValues[gdpValues.length - 1]);
            var fiveYearChange = calculatePercentageChange(gdpValues[years.length - 5], gdpValues[gdpValues.length - 1]);
            var changeSinceRecordsBegan = calculatePercentageChange(gdpValues[0], gdpValues[gdpValues.length - 1]);
            var absoluteOneYearChange = gdpValues[gdpValues.length - 1] - gdpValues[gdpValues.length - 2];
            var absoluteFiveYearChange = gdpValues[gdpValues.length - 1] - gdpValues[years.length - 5];
            var absoluteChangeSinceRecordsBegan = gdpValues[gdpValues.length - 1] - gdpValues[0];

            // Display the changes in the table
            var newRow = gdpTableBody.insertRow();
            newRow.insertCell(0).textContent = "1-Year Change";
            newRow.insertCell(1).textContent = absoluteOneYearChange.toFixed(2);
            newRow.insertCell(2).textContent = oneYearChange.toFixed(2) + "%";
            applyBackgroundStyle(newRow.cells[2], oneYearChange);

            newRow = gdpTableBody.insertRow();
            newRow.insertCell(0).textContent = "5-Year Change";
            newRow.insertCell(1).textContent = absoluteFiveYearChange.toFixed(2);
            newRow.insertCell(2).textContent = fiveYearChange.toFixed(2) + "%";
            applyBackgroundStyle(newRow.cells[2], fiveYearChange);

            newRow = gdpTableBody.insertRow();
            newRow.insertCell(0).textContent = "Change Since 2012";
            newRow.insertCell(1).textContent = absoluteChangeSinceRecordsBegan.toFixed(2);
            newRow.insertCell(2).textContent = changeSinceRecordsBegan.toFixed(2) + "%";
            applyBackgroundStyle(newRow.cells[2], changeSinceRecordsBegan);

            // Function to calculate percentage change
            function calculatePercentageChange(startValue, endValue) {
                return ((endValue - startValue) / Math.abs(startValue)) * 100;
            }
        } else {
                // Handle the error condition
                var errorMessage = 'Rate limit exceeded. Please refresh shortly.';
                displayError(errorMessage);
            }
        }; 

        xhr.onerror = function() {
            // Handle network errors
            var errorMessage = 'Network error occurred while fetching data';
            displayError(errorMessage);
        };

        xhr.send();

        function displayError(message) {

            // Show the error message
            var errorContainer = document.getElementById('error-message');
            errorContainer.textContent = message;
        }

    function jsonToCsv(data) {
        var csv = '';
        var keys = Object.keys(data.result.records[0]);

        // Create the header row
        csv += keys.join(',') + '\n';

        // Create the data rows
        data.result.records.forEach(function(record) {
            var values = keys.map(function(key) {
                return record[key];
            });
            csv += values.join(',') + '\n';
        });

        return csv;
    }

    function parseCSV(csv) {
        var lines = csv.trim().split('\n');
        var result = [];
        var headers = lines[0].split(',');

        for (var i = 1; i < lines.length; i++) {
            var obj = {};
            var currentline = lines[i].split(',');

            for (var j = 0; j < headers.length; j++) {
                obj[headers[j]] = currentline[j];
            }

            result.push(obj);
        }

        return result;
    }

    // Function to apply background style based on percentage change
    function applyBackgroundStyle(cell, percentageChange) {
        var maxPercentage = 20; // Maximum percentage for the gradient scale
        var minColor = [152, 251, 152]; // Lighter green (RGB values)
        var maxColor = [0, 128, 0]; // Darker green (RGB values)

        // Calculate the color based on the percentage change
        var color = calculateGradientColor(minColor, maxColor, Math.min(Math.abs(percentageChange), maxPercentage) / maxPercentage);

        cell.style.backgroundColor = 'rgb(' + color.join(',') + ')';
        cell.style.color = 'black'; // Black text
    }

    // Function to calculate gradient color
    function calculateGradientColor(startColor, endColor, percentage) {
        var color = [];
        for (var i = 0; i < 3; i++) {
            color[i] = Math.round(startColor[i] + percentage * (endColor[i] - startColor[i]));
        }
        return color;
    } 

    </script>

</body>
</html>
